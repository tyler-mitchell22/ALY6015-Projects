library(pacman)
p_load(tidyverse)
p_load(janitor)
p_load(hms)

sales_data <- read_csv("SALESEDATA_Assgnment-FallB.csv") |> clean_names() 

dim(sales_data)

colSums(is.na(sales_data))

# Use na.omit to avoid assumptions with imputation
# Also a small number of NAs
sales_data <- read_csv("SALESEDATA_Assgnment-FallB.csv") |> clean_names() |> na.omit()

sales_data <- sales_data %>%
  mutate(date_of_sale = ifelse(grepl("/26$", date_of_sale), sub("/26$", "/24", 
    date_of_sale),
    date_of_sale))

Q1_A <- quantile(sales_data$product_a_units_sold, 0.25)
Q3_A <- quantile(sales_data$product_a_units_sold, 0.75)
IQR_A <- Q3_A - Q1_A

lower_bound_A <- Q1_A - 1.5 * IQR_A
upper_bound_A <- Q3_A + 1.5 * IQR_A

sales_data$product_a_units_sold[sales_data$product_a_units_sold < lower_bound_A | sales_data$product_a_units_sold > upper_bound_A]

sales_data |> ggplot(aes(x = "Product A", y = product_a_units_sold)) +
  geom_boxplot(fill = "lightblue") +
  labs(title = "Box Plot of Product A Units Sold", x = "", y = "Units Sold") +
  theme_minimal()


Q1_B <- quantile(sales_data$product_b_units_sold, 0.25)
Q3_B <- quantile(sales_data$product_b_units_sold, 0.75)
IQR_B <- Q3_B - Q1_B

lower_bound_B <- Q1_B - 1.5 * IQR_B
upper_bound_B <- Q3_B + 1.5 * IQR_B

sales_data$product_b_units_sold[sales_data$product_b_units_sold < lower_bound_B | sales_data$product_b_units_sold > upper_bound_B]

sales_data |> ggplot(aes(x = "Product B", y = product_b_units_sold)) +
  geom_boxplot(fill = "lightgrey") +
  labs(title = "Box Plot of Product B Units Sold", x = "", y = "Units Sold") +
  theme_minimal()

Q1_C <- quantile(sales_data$product_c_units_sold, 0.25)
Q3_C <- quantile(sales_data$product_c_units_sold, 0.75)
IQR_C <- Q3_C - Q1_C

lower_bound_C <- Q1_C - 1.5 * IQR_C
upper_bound_C <- Q3_C + 1.5 * IQR_C

sales_data$product_c_units_sold[sales_data$product_c_units_sold < lower_bound_C | sales_data$product_c_units_sold > upper_bound_C]

sales_data |> ggplot(aes(x = "Product C", y = product_c_units_sold)) +
  geom_boxplot(fill = "lightgreen") +
  labs(title = "Box Plot of Product C Units Sold", x = "", y = "Units Sold") +
  theme_minimal()
# No outliers in all 3 products

unique(sales_data$region_of_sale)
# No outlier regions

max(sales_data$time_of_sale)
# no outliers as it is less than the # of seconds in a day (86400)

total_sales <- sales_data |> summarise(total_product_a = sum(product_a_units_sold),
  total_product_b = sum(product_b_units_sold),
  total_product_c = sum(product_c_units_sold))

sales_longer <- total_sales |> 
  pivot_longer(cols = everything(), names_to = "product", values_to = "total_units_sold")

sales_longer |> ggplot(mapping = aes(x = product, y = total_units_sold, fill = product)) +
  geom_col() +
  labs(x = "", y = "Units Sold", title = "Total Units Sold by Product")
# dont screenshot the legend

regional_sales <- sales_data |> group_by(region_of_sale) |> 
  summarise(total_product_a = sum(product_a_units_sold),
            total_product_b = sum(product_b_units_sold),
            total_product_c = sum(product_c_units_sold))

region_longer <- regional_sales |> 
  pivot_longer(cols = starts_with("total_"), names_to = "product", values_to = "total_units_sold")

region_longer |> ggplot(mapping = aes(x = region_of_sale, y = total_units_sold, fill = product)) +
  geom_col(position = "dodge") +
  labs(x = "region", y = "Units Sold", title = "Total Units Sold by Region")
# dont screenshot legend

sales_data$hour <- as.numeric(format(as.POSIXct(sales_data$time_of_sale, format = "%H:%M:%S"), "%H"))

categorize_time_of_day <- function(hour) {
  if (hour >= 6 & hour < 12) {
    return("Morning")
  } else if (hour >= 12 & hour < 18) {
    return("Afternoon")
  } else if (hour >= 18 & hour < 24) {
    return("Evening")
  } else {
    return("Night")
  }
}

sales_data$time_of_day <- sapply(sales_data$hour, categorize_time_of_day)

sales_data$time_of_day

df <- sales_data |> 
  pivot_longer(cols = starts_with("Product"), names_to = "Product", values_to = "Units_Sold") |> 
  group_by(time_of_day, Product) |> 
  summarize(Total_Sales = sum(Units_Sold, na.rm = TRUE))

df

df |> ggplot(mapping = aes(x = time_of_day, y = Total_Sales, fill = Product)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Sales by Product and Time of Day", x = "Time of Day", y = "Total Sales",
       fill = "Product") +
  theme_minimal()

sales_by_hour <- sales_data |> 
  group_by(hour) |> 
  summarise(total_product_a = sum(product_a_units_sold), total_product_b = sum(product_b_units_sold),
            total_product_c = sum(product_c_units_sold))

by_hour_longer <- sales_by_hour |> 
  pivot_longer(cols = starts_with("total_"), names_to = "product", values_to = "total_units_sold")

by_hour_longer |> ggplot(mapping = aes(x = hour, y = total_units_sold, color = product)) +
  geom_line(size = 1.0) +
  labs(x = "Hour", y = "Units Sold", title = "Units Sold by Hour by Product") +
  scale_x_continuous(breaks = seq(0, 23, by = 2))


