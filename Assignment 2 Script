library(pacman)
p_load(tidyverse)
p_load(dplyr)
p_load(janitor)
p_load(psych)
p_load(skimr)


#q1
# Null: 𝒻observed = 𝒻expected
# Alternative 𝒻observed ≠ 𝒻expected
q1_sample <- c(12, 8, 24, 6)
q1_pop_propor <- c(0.20, 0.28, 0.36, 0.16)
q1_tot_sample <- sum(sample1)
q1_crit_val <- qchisq(1 - 0.10, 3)
q1 <- chisq.test(x = q1_sample, p = q1_pop_propor, rescale.p = TRUE)
q1_test_stat <- (q1$statistic)
q1_crit_val
q1_test_stat
q1
# Fail to reject null x-squared < critical value 
# and p > 0.1



# Null: 𝒻observed = 𝒻expected
# Alternative 𝒻observed ≠ 𝒻expected
q2_sample <- c(125, 10, 25, 40)
q2_pop_prop <- c(0.708, 0.082, 0.09, 0.12)
q2_tot_sample <- sum(q2_sample)
q2_crit_val <- qchisq(1 - 0.10, 3)
q2 <- chisq.test(x = q2_sample, p = q2_pop_prop, rescale.p = TRUE)
q2_test_stat <- (q2$statistic)
q2_crit_val
q2_test_stat
q2
# Reject null x-squared > critical value
#@ and p < 0.10


#q3
# Null: Movie attendance is independent of ethnicity
# Alternative: Movie attendance is not independent of ethnicity
df <- matrix(
  c(724, 335, 174, 107, 370, 292, 152, 140), nrow = 2, byrow = TRUE, 
  dimnames = list(Year = c("2013", "2014"),
    Ethnicity = c("Caucasian", "Hispanic", "African American", "Other")))
df
deg_free <- (nrow(df) - 1) * (ncol(df) - 1)
q3_crit_val <- qchisq(1 - 0.05, df = deg_free)
q3 <- chisq.test(df)
q3_test_stat <- q3$statistic
q3_test_stat
q3_crit_val
q3
# Reject null x-squared > critical value
#@ and p < 0.05

#q4 
# Null: Rank and branch are independent
# Alternative: Rank and branch are dependent
df2 <- matrix(c(10791, 7816, 932, 11819,
    62491, 42750, 9525, 54344),
  nrow = 4, byrow = FALSE, 
  dimnames = list(
    Branch = c("Army", "Navy", "Marine Corps", "Air Force"),
    Rank = c("Officers", "Enlisted")))
df2
deg_free2 <- (nrow(df2) - 1) * (ncol(df2) - 1)
q4_crit_val <- qchisq(1 - 0.05, deg_free2)
q4 <- chisq.test(df2)
q4_test_stat <- q4$statistic
q4_test_stat
q4_crit_val
q4
# Reject null x-squared > critical value
#@ and p < 0.05

#q5 
# Null: µCondiments = µCereals = µDesserts
# Alternative:  µCondiments ≠ µCereals ≠ µDesserts
condiments <- c(270, 130, 230, 180, 80, 70, 200)
cereals <- c(260, 220, 290, 290, 200, 320, 140)
desserts <- c(100, 180, 250, 250, 300, 360, 300, 160)

df3 <- data.frame(
  Sodium = c(condiments, cereals, desserts),
  Category = factor(c(
    rep("Condiments", length(condiments)),
    rep("Cereals", length(cereals)),
    rep("Desserts", length(desserts))
    )))
df3
aov(Sodium ~ Category, data = df3) |> summary()

deg_free_btwn <- length(unique(df3$Category)) - 1
deg_free_in <- nrow(df3) - length(unique(df3$Category))

q5_crit_val <- qf(1 - 0.05, deg_free_btwn, deg_free_in)
q5_crit_val 
# Fail to reject because F < critical value

#Q6
# Null: µCereal = µChoocolate = µCoffee
# Alternative:  µCeral ≠ µChocolate ≠ µCoffee
df4 <- data.frame(
  Sales = c(578, 320, 264, 249, 237,  
            311, 106, 109, 125, 173, 
            261, 185, 302, 689),
  Category = factor(c(
    rep("Cereal", 5),
    rep("Chocolate", 5),
    rep("Coffee", 4)
  )))
df4
aov(Sales ~ Category, data = df4)

deg_free_btwn2 <- length(unique(df4$Category)) - 1
deg_free_in2 <- nrow(df4) - length(unique(df4$Category))
q6_crit_val <- qf(1 - 0.01, deg_free_btwn2, deg_free_in2)
q6_crit_val
aov(Sales ~ Category, data = df4) |> summary()
# F < critical, fail to reject, no Tukey

# Q7
df5 <- data.frame(
  Expenditures = c(
    4946, 5953, 6202, 7243, 6113,
    6149, 7451, 6000, 6479,
    5282, 8605, 6528, 6911
  ),
  Section = factor(c(
    rep("Eastern", 5),
    rep("Middle", 4),
    rep("Western", 4)
  )))
df5
anova1 <- aov(Expenditures ~ Section, data = df5) 
deg_free_btwn3 <- length(unique(df5$Section)) - 1
deg_free_in3 <- nrow(df4) - length(unique(df5$Section))
q7_crit_val <- qf(1 - 0.05, deg_free_btwn3, deg_free_in3)
q7_crit_val
anova1 |> summary()

# Fail to reject, f < critical value. No significant difference in means. 
# Tukey was not needed



#Q8
# H0: There is no interaction between Grow-light and Plant Food.
# H1: There is an interaction between Grow-light and Plant Food.

# H0: The mean plant growth is the same for both Grow-light levels.
# H1: The mean plant growth differs between the two Grow-light levels.

# H0: The mean plant growth is the same for both Plant Food types.
# H1: The mean plant growth differs between the two Plant Food types.

df6 <- data.frame(
  Growth = c(
    9.2, 9.4, 8.9,
    8.5, 9.2, 8.9,
    7.1, 7.2, 8.5,
    5.5, 5.8, 7.6),
  Light = factor(c(
    rep("Grow-light 1", 3), rep("Grow-light 2", 3),
    rep("Grow-light 1", 3), rep("Grow-light 2", 3))),
  Food = factor(c(
    rep("Plant food A", 6),
    rep("Plant food B", 6))))
df6
anova2 <- aov(Growth ~ Light * Food, data = df6)
anova2 |> summary()
q8_crit_val <- qf(1 - 0.05, 1, 8)
q8_crit_val

plants <- df6  |> 
  group_by(Light, Food) |> 
  summarise(
    Mean = mean(Growth),
    SE = sd(Growth) / sqrt(n()))

ggplot(plants, aes(x = Light, y = Mean, group = Food, color = Food)) +
  geom_point(size = 3) + 
  geom_line(size = 1, aes(linetype = Food)) + 
  geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE), width = 0.2) +
  labs(x = "Grow-light",y = "Mean Growth (inches)",
    title = "Interaction Between Grow-light and Plant Food",
    color = "Plant Food",
    linetype = "Plant Food") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 14),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10))
# Fail to reject interaction of grow light - plant food p > 0.05
# Fail to reject effect of grow light p > 0.05
# Reject effect of plant food p < 0.05

baseball <- read_csv("baseball.csv") |> clean_names()

dim(baseball)

colSums(is.na(baseball))

summary(baseball$obp)
summary(baseball$ba)
baseball |> select(-team, -league, -year, -playoffs, -rank_season,
                   -rank_playoffs, -g) |> summary()

baseball |> select(-team, -league, -year, -playoffs, -rank_season,
                   -rank_playoffs, -g, -decade) |> describe()


baseball |> filter(year >= 1998) |> 
  group_by(year, league) |> 
  summarise(runs_for = mean(rs), 
            runs_against = mean(ra)) |> 
  pivot_longer(cols = c(runs_for, runs_against), 
               names_to = "run_type", 
               values_to = "average_runs") |> 
  ggplot(aes(x = year, y = average_runs, color = run_type, linetype = league)) +
  geom_line(size = 1) +
  scale_x_continuous(breaks = seq(1998, max(baseball$year, na.rm = TRUE), by = 2)) +
  labs(title = "Average Runs For and Against (1998+)", 
       x = "Year", 
       y = "Average Runs", 
       color = "Run Type")

baseball |> 
  filter(!is.na(ba)) |> 
  group_by(year, league) |> 
  summarise(mean_ba = mean(ba, na.rm = TRUE)) |> 
  ggplot(aes(x = year, y = mean_ba, color = league, group = league)) +
  geom_line(size = 1) +
  geom_point() +
  scale_x_continuous(breaks = seq(min(baseball$year, na.rm = TRUE), max(baseball$year, na.rm = TRUE), by = 5)) +
  scale_y_continuous(labels = scales::label_number(accuracy = 0.001)) +
  labs(title = "Batting Average Trends Over the Years by League",
       x = "Year",
       y = "Average Batting Average (BA)",
       color = "League") +
  theme_minimal()

baseball |> 
  filter(!is.na(obp)) |> 
  group_by(year, league) |> 
  summarise(mean_obp = mean(obp, na.rm = TRUE)) |> 
  ggplot(aes(x = year, y = mean_obp, color = league, group = league)) +
  geom_line(size = 1) +
  geom_point() +
  scale_x_continuous(breaks = seq(min(baseball$year, na.rm = TRUE), max(baseball$year, na.rm = TRUE), by = 5)) +
  scale_y_continuous(labels = scales::label_number(accuracy = 0.001)) +
  labs(title = "On Base Percentage Trends Over the Years by League",
       x = "Year",
       y = "Average On Base Percentage (OBP)",
       color = "League") +
  theme_minimal()

baseball$decade <- baseball$year - (baseball$year %% 10)

baseball$decade

# Null: The number of wins is equally distributed across decades.
# Alternative: The number of wins is not equally distributed across decades.

wins_by_decade <- aggregate(w ~ decade, data = baseball, sum)

exp_freq <- rep(sum(wins_by_decade$W) / nrow(wins_by_decade), nrow(wins_by_decade))
chisq.test(wins_by_decade$w, 
           p = rep(1 / nrow(wins_by_decade), nrow(wins_by_decade)))

bb_crit_val <- qchisq(1 - 0.05, df = nrow(wins_by_decade) - 1)
bb_crit_val
# X-squared > critical and p < 0.05. Reject null, not equally
# distributed
# Does comparing the critical value with the test value provide 
# the same result as comparing the p-value from R with the
# significance level? YES


# Fertilizer:
# H0: Fertilizer has no significant effect on yield.
# H1: Fertilizer has a significant effect on yield.
# Density:
# H0:Density has no significant effect on yield.
# H1: Density has a significant effect on yield.
# Interaction (Fertilizer × Density):
# H0: There is no significant interaction between fertilizer and density affecting yield.
# H1: There is a significant interaction between fertilizer and density affecting yield.
crops <- read_csv("crop_data.csv") |> clean_names()

crops$density <- as_factor(crops$density)
crops$fertilizer <- as_factor(crops$fertilizer)
crops$block <- as_factor(crops$block)

aov(yield ~ fertilizer * density, data = crops) |> summary()

df_fert <- length(unique(crops$fertilizer)) - 1
df_dens <- length(unique(crops$density)) - 1
df_int <- df_fert * df_dens
df_residuals <- nrow(crops) - (length(unique(crops$fertilizer)) * length(unique(crops$density)))

crit_fert <- qf(1 - 0.05, df_fert, df_residuals)
crit_dens <- qf(1 - 0.05, df_dens, df_residuals)
crit_int <- qf(1 - 0.05, df_int, df_residuals)

crit_fert
crit_dens
crit_int

# Fertilizer: Reject null fertilizer has an impact F > crit and 
# p < 0.05

# Density: Reject null fertilizer has an impact F > crit and 
# p < 0.05

# Interaction: Fail to reject f < crit and p > 0.05

